# This runs checks to verify if code is properly formatted and that tests (unit and integration against a mocked environment) are passing.
name: Machina

on:
  push:
    branches:
      - master
    paths-ignore:
      - '*.md'
      - '*.sh'
      - '.github/*.md'
      - '.github/CODEOWNERS'
      - 'zarf/**'

  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - '*.md'
      - '*.sh'
      - '.github/*.md'
      - '.github/CODEOWNERS'
      - 'zarf/**'

jobs:
  lint-test:
    name: "Lint & Test"
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: "1.17"
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Cache go module
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run staticheck
        run: |
          wget -O staticcheck.tgz https://github.com/dominikh/go-tools/releases/download/2021.1.1/staticcheck_linux_amd64.tar.gz
          sudo tar -xzf staticcheck.tgz
          ./staticcheck/staticcheck --version
          ./staticcheck/staticcheck -checks=all ./...
      - name: Run tests
        run: |
          make test
        timeout-minutes: 15
  build-push-amd:
    name: "Build AMD64 and Push"
    runs-on: ubuntu-latest
    needs: lint-test
    if: github.event_name == 'push'
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: "1.17"
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Cache go module
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and publish docker image
        run: |
          make build-api build-metrics  push-api push-metrics
  build-push-arm:
    name: "Build ARM64 and Push"
    runs-on: arm64
    needs: lint-test
    #if: github.event_name == 'push'
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: "1.17"
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Cache go module
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and publish docker image
        run: |
          make build-api-arm build-metrics-arm push-api-arm push-metrics-arm